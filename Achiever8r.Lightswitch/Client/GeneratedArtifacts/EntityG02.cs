

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Achievement : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Achievement entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Achievement()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Achievement(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Achievement> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Achievement.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Achievement_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Achievement_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Achievement.DetailsClass.SetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Achievement.DetailsClass.SetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.Achievement.DetailsClass.SetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime NominatedOn
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NominatedOn);
            }
            set
            {
                global::LightSwitchApplication.Achievement.DetailsClass.SetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NominatedOn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NominatedOn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NominatedOn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NominatedOn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NumberOfRatings
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NumberOfRatings);
            }
            set
            {
                global::LightSwitchApplication.Achievement.DetailsClass.SetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NumberOfRatings, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfRatings_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfRatings_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfRatings_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DisplayName
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.DisplayName);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayName_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AchievementCategory AchievementCategory
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievementCategory);
            }
            set
            {
                global::LightSwitchApplication.Achievement.DetailsClass.SetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievementCategory, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AchievementCategory_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AchievementCategory_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AchievementCategory_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.User AchievedByUser
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievedByUser);
            }
            set
            {
                global::LightSwitchApplication.Achievement.DetailsClass.SetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievedByUser, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AchievedByUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AchievedByUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AchievedByUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.User NominatedByUser
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NominatedByUser);
            }
            set
            {
                global::LightSwitchApplication.Achievement.DetailsClass.SetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NominatedByUser, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NominatedByUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NominatedByUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NominatedByUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Rating> Ratings
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetValue(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Ratings);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Rating> RatingsQuery
        {
            get
            {
                return global::LightSwitchApplication.Achievement.DetailsClass.GetQuery(this, global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Ratings);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Achievement,
                global::LightSwitchApplication.Achievement.DetailsClass,
                global::LightSwitchApplication.Achievement.DetailsClass.IImplementation,
                global::LightSwitchApplication.Achievement.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass>.Entry
                __AchievementEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass>.Entry(
                    global::LightSwitchApplication.Achievement.DetailsClass.__Achievement_CreateNew,
                    global::LightSwitchApplication.Achievement.DetailsClass.__Achievement_Created,
                    global::LightSwitchApplication.Achievement.DetailsClass.__Achievement_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Achievement __Achievement_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Achievement> es)
            {
                return new global::LightSwitchApplication.Achievement(es);
            }
            private static void __Achievement_Created(global::LightSwitchApplication.Achievement e)
            {
                e.Achievement_Created();
            }
            private static bool __Achievement_AllowSaveWithErrors(global::LightSwitchApplication.Achievement e)
            {
                bool result = false;
                e.Achievement_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Achievement.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::System.DateTime> NominatedOn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NominatedOn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int> NumberOfRatings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NumberOfRatings) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string> DisplayName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.DisplayName) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.AchievementCategory> AchievementCategory
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievementCategory) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.AchievementCategory>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User> AchievedByUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievedByUser) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User> NominatedByUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NominatedByUser) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.Rating> Ratings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Ratings) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.Rating>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string Description { get; set; }
                new global::System.DateTime NominatedOn { get; set; }
                new int NumberOfRatings { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AchievementCategory { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AchievedByUser { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation NominatedByUser { get; set; }
                new global::System.Collections.IEnumerable Ratings { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Achievement e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Achievement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Achievement e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Achievement e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Achievement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Achievement e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.Achievement e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.Achievement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.Achievement e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::System.DateTime>.Entry
                    NominatedOn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::System.DateTime>.Entry(
                        "NominatedOn",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedOn_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedOn_ComputeIsReadOnly,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedOn_Validate,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedOn_GetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedOn_SetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedOn_OnValueChanged);
                private static void _NominatedOn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._NominatedOn, sf);
                }
                private static bool _NominatedOn_ComputeIsReadOnly(global::LightSwitchApplication.Achievement e)
                {
                    bool result = false;
                    e.NominatedOn_IsReadOnly(ref result);
                    return result;
                }
                private static void _NominatedOn_Validate(global::LightSwitchApplication.Achievement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NominatedOn_Validate(r);
                }
                private static global::System.DateTime _NominatedOn_GetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.ImplementationEntity.NominatedOn;
                }
                private static void _NominatedOn_SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.NominatedOn = global::LightSwitchApplication.Achievement.DetailsClass.TruncateDate(v);
                }
                private static void _NominatedOn_OnValueChanged(global::LightSwitchApplication.Achievement e)
                {
                    e.NominatedOn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>.Entry
                    NumberOfRatings = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>.Entry(
                        "NumberOfRatings",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NumberOfRatings_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NumberOfRatings_ComputeIsReadOnly,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NumberOfRatings_Validate,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NumberOfRatings_GetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NumberOfRatings_SetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NumberOfRatings_OnValueChanged);
                private static void _NumberOfRatings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._NumberOfRatings, sf);
                }
                private static bool _NumberOfRatings_ComputeIsReadOnly(global::LightSwitchApplication.Achievement e)
                {
                    bool result = false;
                    e.NumberOfRatings_IsReadOnly(ref result);
                    return result;
                }
                private static void _NumberOfRatings_Validate(global::LightSwitchApplication.Achievement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NumberOfRatings_Validate(r);
                }
                private static int _NumberOfRatings_GetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.ImplementationEntity.NumberOfRatings;
                }
                private static void _NumberOfRatings_SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NumberOfRatings = v;
                }
                private static void _NumberOfRatings_OnValueChanged(global::LightSwitchApplication.Achievement e)
                {
                    e.NumberOfRatings_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>.Entry
                    DisplayName = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>.Entry(
                        "DisplayName",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._DisplayName_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._DisplayName_Validate,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._DisplayName_ComputeValue);
                private static void _DisplayName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._DisplayName, sf);
                }
                private static void _DisplayName_Validate(global::LightSwitchApplication.Achievement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DisplayName_Validate(r);
                }
                private static string _DisplayName_ComputeValue(global::LightSwitchApplication.Achievement e)
                {
                    string value = default(string);
                    e.DisplayName_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.AchievementCategory>.Entry
                    AchievementCategory = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.AchievementCategory>.Entry(
                        "AchievementCategory",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievementCategory_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievementCategory_ComputeIsReadOnly,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievementCategory_Validate,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievementCategory_GetCoreImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievementCategory_GetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievementCategory_SetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievementCategory_Refresh,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievementCategory_OnValueChanged);
                private static void _AchievementCategory_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.AchievementCategory>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._AchievementCategory, sf);
                }
                private static bool _AchievementCategory_ComputeIsReadOnly(global::LightSwitchApplication.Achievement e)
                {
                    bool result = false;
                    e.AchievementCategory_IsReadOnly(ref result);
                    return result;
                }
                private static void _AchievementCategory_Validate(global::LightSwitchApplication.Achievement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AchievementCategory_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AchievementCategory_GetCoreImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.ImplementationEntity.AchievementCategory;
                }
                private static global::LightSwitchApplication.AchievementCategory _AchievementCategory_GetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.AchievementCategory, global::LightSwitchApplication.AchievementCategory.DetailsClass>(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievementCategory, ref d._AchievementCategory);
                }
                private static void _AchievementCategory_SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d, global::LightSwitchApplication.AchievementCategory v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievementCategory, ref d._AchievementCategory, (i, ev) => i.AchievementCategory = ev, v);
                }
                private static void _AchievementCategory_Refresh(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievementCategory, ref d._AchievementCategory);
                }
                private static void _AchievementCategory_OnValueChanged(global::LightSwitchApplication.Achievement e)
                {
                    e.AchievementCategory_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>.Entry
                    AchievedByUser = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>.Entry(
                        "AchievedByUser",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievedByUser_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievedByUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievedByUser_Validate,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievedByUser_GetCoreImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievedByUser_GetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievedByUser_SetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievedByUser_Refresh,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._AchievedByUser_OnValueChanged);
                private static void _AchievedByUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._AchievedByUser, sf);
                }
                private static bool _AchievedByUser_ComputeIsReadOnly(global::LightSwitchApplication.Achievement e)
                {
                    bool result = false;
                    e.AchievedByUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _AchievedByUser_Validate(global::LightSwitchApplication.Achievement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AchievedByUser_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AchievedByUser_GetCoreImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.ImplementationEntity.AchievedByUser;
                }
                private static global::LightSwitchApplication.User _AchievedByUser_GetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.User, global::LightSwitchApplication.User.DetailsClass>(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievedByUser, ref d._AchievedByUser);
                }
                private static void _AchievedByUser_SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d, global::LightSwitchApplication.User v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievedByUser, ref d._AchievedByUser, (i, ev) => i.AchievedByUser = ev, v);
                }
                private static void _AchievedByUser_Refresh(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.AchievedByUser, ref d._AchievedByUser);
                }
                private static void _AchievedByUser_OnValueChanged(global::LightSwitchApplication.Achievement e)
                {
                    e.AchievedByUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>.Entry
                    NominatedByUser = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>.Entry(
                        "NominatedByUser",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedByUser_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedByUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedByUser_Validate,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedByUser_GetCoreImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedByUser_GetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedByUser_SetImplementationValue,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedByUser_Refresh,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._NominatedByUser_OnValueChanged);
                private static void _NominatedByUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._NominatedByUser, sf);
                }
                private static bool _NominatedByUser_ComputeIsReadOnly(global::LightSwitchApplication.Achievement e)
                {
                    bool result = false;
                    e.NominatedByUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _NominatedByUser_Validate(global::LightSwitchApplication.Achievement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NominatedByUser_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _NominatedByUser_GetCoreImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.ImplementationEntity.NominatedByUser;
                }
                private static global::LightSwitchApplication.User _NominatedByUser_GetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.User, global::LightSwitchApplication.User.DetailsClass>(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NominatedByUser, ref d._NominatedByUser);
                }
                private static void _NominatedByUser_SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass d, global::LightSwitchApplication.User v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NominatedByUser, ref d._NominatedByUser, (i, ev) => i.NominatedByUser = ev, v);
                }
                private static void _NominatedByUser_Refresh(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.NominatedByUser, ref d._NominatedByUser);
                }
                private static void _NominatedByUser_OnValueChanged(global::LightSwitchApplication.Achievement e)
                {
                    e.NominatedByUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.Rating>.Entry
                    Ratings = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.Rating>.Entry(
                        "Ratings",
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Ratings_Stub,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Ratings_GetReferencedEntities,
                        global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties._Ratings_GetEntityCollection);
                private static void _Ratings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Achievement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.Rating>.Data> c, global::LightSwitchApplication.Achievement.DetailsClass d, object sf)
                {
                    c(d, ref d._Ratings, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Rating> _Ratings_GetReferencedEntities(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Rating, global::LightSwitchApplication.Rating.DetailsClass>(global::LightSwitchApplication.Achievement.DetailsClass.PropertySetProperties.Ratings, ref d._Ratings);
                }
                private static global::System.Collections.IEnumerable _Ratings_GetEntityCollection(global::LightSwitchApplication.Achievement.DetailsClass d)
                {
                    return d.ImplementationEntity.Ratings;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::System.DateTime>.Data _NominatedOn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, int>.Data _NumberOfRatings;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, string>.Data _DisplayName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.AchievementCategory>.Data _AchievementCategory;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>.Data _AchievedByUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.User>.Data _NominatedByUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Achievement, global::LightSwitchApplication.Achievement.DetailsClass, global::LightSwitchApplication.Rating>.Data _Ratings;
            
        }
    
        #endregion
    }
    
    #endregion
}
